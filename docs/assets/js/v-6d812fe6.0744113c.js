"use strict";(self.webpackChunkvue_good_table_next=self.webpackChunkvue_good_table_next||[]).push([[151],{8243:(n,s,a)=>{a.r(s),a.d(s,{default:()=>v});var e=a(6252);const p=(0,e.uE)('<h1 id="column-options" tabindex="-1"><a class="header-anchor" href="#column-options" aria-hidden="true">#</a> Column Options</h1><p>Each column objects can contain the following configuration options:</p><h2 id="label" tabindex="-1"><a class="header-anchor" href="#label" aria-hidden="true">#</a> label</h2><p>type <code>String</code></p><p>Text to put on column header.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>columns<span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    label<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="field" tabindex="-1"><a class="header-anchor" href="#field" aria-hidden="true">#</a> field</h2><p>type <code>String</code></p><p>Row object property that this column corresponds to. This can be:</p><ul><li>String <code>eg: &#39;name&#39;</code> - simple row property name</li><li>String <code>eg: &#39;location.lat&#39;</code>- nested row property name. lets say if the row had a property &#39;location&#39; which was an object containing &#39;lat&#39; and &#39;lon&#39;</li><li>Function - a function that returns a value to be displayed based on the row object</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>columns<span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    label<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>\n    field<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fealdFn<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">]</span>\n<span class="token comment">// in methods</span>\n<span class="token function">fieldFn</span><span class="token punctuation">(</span><span class="token parameter">rowObj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> rowObj<span class="token punctuation">.</span>name<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> type</h2><p>type <code>String</code></p><p>type of column. default: &#39;text&#39;. This determines the formatting for the column and filter behavior as well. Possible values:</p><ul><li><em>number</em> - right aligned</li><li><em>decimal</em> - right aligned, 2 decimal places</li><li><em>percentage</em> - expects a decimal like 0.03 and formats it as 3.00%</li><li><em>boolean</em> - right aligned</li><li><em>date</em> - expects a string representation of date eg &#39;20170530&#39;. You should also specify <a href="#dateinputformat">dateInputFormat</a> and <a href="#dateoutputformat">dateOutputFormat</a></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>columns<span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    label<span class="token operator">:</span> <span class="token string">&#39;joined On&#39;</span><span class="token punctuation">,</span>\n    field<span class="token operator">:</span> <span class="token string">&#39;createdAt&#39;</span><span class="token punctuation">,</span>\n    type<span class="token operator">:</span> <span class="token string">&#39;date&#39;</span><span class="token punctuation">,</span>\n    dateInputFormat<span class="token operator">:</span> <span class="token string">&#39;yyyy-MM-dd&#39;</span><span class="token punctuation">,</span> <span class="token comment">// expects 2018-03-16</span>\n    dateOutputFormat<span class="token operator">:</span> <span class="token string">&#39;MMM do yyyy&#39;</span><span class="token punctuation">,</span> <span class="token comment">// outputs Mar 16th 2018</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="dateinputformat" tabindex="-1"><a class="header-anchor" href="#dateinputformat" aria-hidden="true">#</a> dateInputFormat</h2><p>type <code>String</code></p><p>provide the format to parse date string.</p>',19),t={class:"custom-container tip"},l=(0,e._)("p",{class:"custom-container-title"},"TIP",-1),o=(0,e.Uk)("Vue-good-table uses date-fns for date parsing. "),c={href:"https://date-fns.org/v2.17.0/docs/parse",target:"_blank",rel:"noopener noreferrer"},r=(0,e.Uk)("Check out their formats here"),i=(0,e.Uk)("."),u=(0,e.uE)('<h2 id="dateoutputformat" tabindex="-1"><a class="header-anchor" href="#dateoutputformat" aria-hidden="true">#</a> dateOutputFormat</h2><p>type <code>String</code></p><p>provide the format for output date</p><h2 id="sortable" tabindex="-1"><a class="header-anchor" href="#sortable" aria-hidden="true">#</a> sortable</h2><p>type <code>Boolean</code></p><p>enable/disable sorting on columns. This property is higher priority than global sortable property</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>columns<span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    label<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>\n    field<span class="token operator">:</span> <span class="token string">&#39;user_name&#39;</span><span class="token punctuation">,</span>\n    sortable<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="firstsorttype" tabindex="-1"><a class="header-anchor" href="#firstsorttype" aria-hidden="true">#</a> firstSortType</h2><p>type <code>String (default: &#39;asc&#39;)</code></p><p>controls the first sort type when sorting by the column. If you want the first sort type for this column to be descending, set this property to &#39;desc&#39;. Possible values:</p><ul><li><em>asc</em> - the initial sort will be ascending</li><li><em>desc</em> - the initial sort will be descending</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>columns<span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    label<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>\n    field<span class="token operator">:</span> <span class="token string">&#39;user_name&#39;</span><span class="token punctuation">,</span>\n    sortable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    firstSortType<span class="token operator">:</span> <span class="token string">&#39;desc&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="sortfn" tabindex="-1"><a class="header-anchor" href="#sortfn" aria-hidden="true">#</a> sortFn</h2><p>type <code>Function</code></p><p>custom sort function. If you want to supply your own sort function you can use this property.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// in data</span>\ncolumns<span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    label<span class="token operator">:</span> <span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span>\n    field<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>\n    sortable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    sortFn<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sortFn<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">//...</span>\n<span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token comment">// in methods</span>\nmethods<span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token function">sortFn</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> col<span class="token punctuation">,</span> rowX<span class="token punctuation">,</span> rowY</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// x - row1 value for column</span>\n    <span class="token comment">// y - row2 value for column</span>\n    <span class="token comment">// col - column being sorted</span>\n    <span class="token comment">// rowX - row object for row1</span>\n    <span class="token comment">// rowY - row object for row2</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;</span> y <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;</span> y <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="formatfn" tabindex="-1"><a class="header-anchor" href="#formatfn" aria-hidden="true">#</a> formatFn</h2><p>type <code>Function</code></p><p>Allows for custom format of values, <code>function(value)</code>, should return the formatted value to display.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// in data</span>\ncolumns<span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    label<span class="token operator">:</span> <span class="token string">&#39;Salary&#39;</span><span class="token punctuation">,</span>\n    field<span class="token operator">:</span> <span class="token string">&#39;salary&#39;</span><span class="token punctuation">,</span>\n    sortable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    formatFn<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>formatFn<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">//...</span>\n<span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token comment">// in methods</span>\n<span class="token function-variable function">formatFn</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token string">&#39;$&#39;</span> <span class="token operator">+</span> value<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="html" tabindex="-1"><a class="header-anchor" href="#html" aria-hidden="true">#</a> html</h2><p>type <code>Boolean</code></p><p>indicates whether this column will require html rendering.</p>',23),b={class:"custom-container tip"},m=(0,e._)("p",{class:"custom-container-title"},"TIP",-1),d=(0,e.Uk)("The preferred way of creating columns that have html is by "),k=(0,e.Uk)("using slots"),h=(0,e.uE)('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// in data</span>\ncolumns<span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    label<span class="token operator">:</span> <span class="token string">&#39;Action&#39;</span><span class="token punctuation">,</span>\n    field<span class="token operator">:</span> <span class="token string">&#39;btn&#39;</span><span class="token punctuation">,</span>\n    html<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">//...</span>\n<span class="token punctuation">]</span><span class="token punctuation">,</span>\nrows<span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    btn<span class="token operator">:</span> <span class="token string">&#39;&lt;button&gt;My Action&lt;/button&gt;&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// ...</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="width" tabindex="-1"><a class="header-anchor" href="#width" aria-hidden="true">#</a> width</h2><p>type <code>Number</code></p><p>provide a width value for this column</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>columns<span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    label<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>\n    field<span class="token operator">:</span> <span class="token string">&#39;user_name&#39;</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token string">&#39;50px&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="hidden" tabindex="-1"><a class="header-anchor" href="#hidden" aria-hidden="true">#</a> hidden</h2><p>type <code>Boolean</code></p><p>hide a column</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>columns<span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    label<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>\n    field<span class="token operator">:</span> <span class="token string">&#39;user_name&#39;</span><span class="token punctuation">,</span>\n    hidden<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="thclass" tabindex="-1"><a class="header-anchor" href="#thclass" aria-hidden="true">#</a> thClass</h2><p>type <code>String</code></p><p>provide custom class(es) to the table header</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>columns<span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    label<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>\n    field<span class="token operator">:</span> <span class="token string">&#39;user_name&#39;</span><span class="token punctuation">,</span>\n    thClass<span class="token operator">:</span> <span class="token string">&#39;custom-th-class&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="tdclass" tabindex="-1"><a class="header-anchor" href="#tdclass" aria-hidden="true">#</a> tdClass</h2><p>type <code>String</code> or <code>Function</code></p><p>provide custom class(es) to the table cells</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>columns<span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    label<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>\n    field<span class="token operator">:</span> <span class="token string">&#39;user_name&#39;</span><span class="token punctuation">,</span>\n    tdClass<span class="token operator">:</span> <span class="token string">&#39;text-center&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>or</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>columns<span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    label<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>\n    field<span class="token operator">:</span> <span class="token string">&#39;user_name&#39;</span><span class="token punctuation">,</span>\n    tdClass<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tdClassFunc<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">]</span>\n<span class="token comment">// and later</span>\nmethods<span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token function">tdClassFunc</span><span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>row<span class="token punctuation">.</span>field <span class="token operator">&gt;</span> <span class="token number">50</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token string">&#39;red-class&#39;</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token string">&#39;green-class&#39;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="globalsearchdisabled" tabindex="-1"><a class="header-anchor" href="#globalsearchdisabled" aria-hidden="true">#</a> globalSearchDisabled</h2><p>type <code>Boolean (default: false)</code></p><p>if true, this column will be ignored by the global search</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>columns<span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    label<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>\n    field<span class="token operator">:</span> <span class="token string">&#39;user_name&#39;</span><span class="token punctuation">,</span>\n    globalSearchDisabled<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="tooltip" tabindex="-1"><a class="header-anchor" href="#tooltip" aria-hidden="true">#</a> tooltip</h2><p>type <code>String</code></p><p>Text to put on a simple tooltip for column header.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>columns<span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    label<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>\n    field<span class="token operator">:</span> <span class="token string">&#39;user_name&#39;</span><span class="token punctuation">,</span>\n    tooltip<span class="token operator">:</span> <span class="token string">&#39;A simple tooltip&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',27),g={},v=(0,a(3744).Z)(g,[["render",function(n,s){const a=(0,e.up)("OutboundLink"),g=(0,e.up)("RouterLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[p,(0,e._)("div",t,[l,(0,e._)("p",null,[o,(0,e._)("a",c,[r,(0,e.Wm)(a)]),i])]),u,(0,e._)("div",b,[m,(0,e._)("p",null,[d,(0,e.Wm)(g,{to:"/guide/advanced/#custom-row-template"},{default:(0,e.w5)((()=>[k])),_:1})])]),h],64)}]])},5137:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-6d812fe6",path:"/guide/configuration/column-options.html",title:"Column Options",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"label",slug:"label",children:[]},{level:2,title:"field",slug:"field",children:[]},{level:2,title:"type",slug:"type",children:[]},{level:2,title:"dateInputFormat",slug:"dateinputformat",children:[]},{level:2,title:"dateOutputFormat",slug:"dateoutputformat",children:[]},{level:2,title:"sortable",slug:"sortable",children:[]},{level:2,title:"firstSortType",slug:"firstsorttype",children:[]},{level:2,title:"sortFn",slug:"sortfn",children:[]},{level:2,title:"formatFn",slug:"formatfn",children:[]},{level:2,title:"html",slug:"html",children:[]},{level:2,title:"width",slug:"width",children:[]},{level:2,title:"hidden",slug:"hidden",children:[]},{level:2,title:"thClass",slug:"thclass",children:[]},{level:2,title:"tdClass",slug:"tdclass",children:[]},{level:2,title:"globalSearchDisabled",slug:"globalsearchdisabled",children:[]},{level:2,title:"tooltip",slug:"tooltip",children:[]}],filePathRelative:"guide/configuration/column-options.md",git:{updatedTime:1615489652e3,contributors:[{name:"Akshay Anand",email:"aks9800@gmail.com",commits:6},{name:"Salvador Montiel",email:"salvadormontiel8@gmail.com",commits:1},{name:"s-slavchev",email:"s-slavchev@users.noreply.github.com",commits:1}]}}}}]);